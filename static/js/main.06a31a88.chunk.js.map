{"version":3,"sources":["GoogleDriveGallery/index.js","GoogleDriveGallery/GoogleDriveGallery.js","Markdown/index.js","Markdown/Markdown.js","data/photos.js","data/consts.js","data/articles.js","App.js","serviceWorker.js","index.js","data/texts/home.md","data/texts/about.md","data/texts/articles/ganesh.md"],"names":["GoogleDriveGallery","state","imagesList","currentImage","error","loading","isOpen","_this2","this","map","_ref","id","name","src","concat","props","googleApiKey","caption","folderId","pattern","pageSize","orderBy","setState","query","QUERY_URL","images","nextPageToken","NEXT_PAGE_URL","fetch","response","json","push","apply","Object","toConsumableArray","_ref2","imageListAsImageGalleryItems","console","_context","t0","getImagesList","onClose","_this3","react_default","a","createElement","className","Lightbox_default","close","onClickPrev","gotoPrevious","onClickNext","gotoNext","imageCountSeparator","Component","Markdown","text","undefined","file","data","fetchText","source","_context2","with_html_default","escapeHtml","photos","nepal2015","india2016","spb2017","consts","articles","ganesh","MarkdownPage","src_Markdown","Gallery","withRouter","history","_ref$pattern","src_GoogleDriveGallery","NavigationLink","location","match","staticContext","objectWithoutProperties","pathname","startsWith","to","Link","assign","Header","href","onClick","nav","document","getElementById","index_es","icon","faBars","faGithub","Text","_ref3","params","Photo","_ref4","entries","_ref5","_ref6","slicedToArray","route","_ref6$","key","gallery","App","App_Header","Route","exact","path","component","homeText","aboutText","Switch","Boolean","window","hostname","ReactDOM","render","BrowserRouter","basename","process","src_App_0","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.06a31a88.chunk.js","sourcesContent":["import GoogleDriveGallery from './GoogleDriveGallery';\n\nexport default GoogleDriveGallery;","import React, { Component } from 'react';\nimport Lightbox from 'react-images';\n\nimport './GoogleDriveGallery.css';\n\n\nexport default class GoogleDriveGallery extends Component {\n  \n  state = {\n    imagesList: [],\n    currentImage: 0,\n    error: false,\n    loading: false,\n    isOpen: true,\n  }\n\n  imageListAsImageGalleryItems(imagesList) {\n    return imagesList.map(\n      ({id, name}) => {\n        return {\n          src: `https://www.googleapis.com/drive/v3/files/${id}?alt=media&key=${this.props.googleApiKey}`,\n          caption: name,\n        };\n      }\n    )\n  }\n\n  async getImagesList(folderId, googleApiKey, pattern=null, pageSize=1000, orderBy='name') {\n    try {\n      this.setState({loading: true});\n      const query = `'${folderId}'+in+parents+and+mimeType+contains+'image/'` + (pattern ? `+and+name+contains+'${pattern}'` : '')\n      const QUERY_URL = `https://www.googleapis.com/drive/v3/files?q=${query}&orderBy=${orderBy}&pageSize=${pageSize}&key=${googleApiKey}`;\n      const images = [];\n      let nextPageToken = true;\n      while (nextPageToken) {\n        const NEXT_PAGE_URL = QUERY_URL + (nextPageToken === true || !nextPageToken ? '' : `&pageToken=${nextPageToken}`);\n        const response = await fetch(NEXT_PAGE_URL);\n        const json = await response.json();\n        images.push(...json['files'].map(({id, name}) => {return {id, name};}));\n        nextPageToken = json['nextPageToken'];\n      }\n      this.setState(\n        {\n          imagesList: this.imageListAsImageGalleryItems(images),\n          loading: false\n        }\n      );\n    } catch (error) {\n      console.error(error);\n      this.setState({error: true, loading: false});\n    }\n  }\n\n  async componentDidMount() {\n    const { folderId, googleApiKey, pattern } = this.props;\n    await this.getImagesList(folderId, googleApiKey, pattern);\n  }\n\n  gotoPrevious () {\n    this.setState({\n      currentImage: this.state.currentImage - 1,\n    });\n  }\n\n  gotoNext () {\n    this.setState({\n      currentImage: this.state.currentImage + 1,\n    });\n  }\n\n  close() {\n    if ('onClose' in this.props) {\n      this.props.onClose();\n    }\n    this.setState({isOpen: false});\n  }\n\n  render() {\n    return (\n      this.state.loading ?\n         \n        <div className='loading'>Loading...</div> :\n         \n      this.state.error ?\n\n        <div className='error'>Error loading gallery!</div> :\n      \n      <Lightbox\n        images={this.state.imagesList}\n        isOpen={this.state.isOpen}\n        onClose={() => this.close()}\n        onClickPrev={() => this.gotoPrevious()}\n        onClickNext={() => this.gotoNext()}\n        imageCountSeparator='/'\n        currentImage={this.state.currentImage}\n      />\n    );\n  }\n}","import Markdown from './Markdown';\nexport default Markdown;\n","import React, { Component } from 'react';\nimport ReactMarkdown from 'react-markdown/with-html';\n\nexport default class Markdown extends Component {\n  state = {\n    text: undefined,\n    loading: false,\n    error: false,\n  }\n  \n  async fetchText(file) {\n    const data = await fetch(file);\n    return await data.text();\n  }\n\n  async componentDidMount() {\n    this.setState({loading: true});\n    try {\n      const text = await this.fetchText(this.props.source);\n      this.setState({text: text, loading: false});\n    } catch (error) {\n      console.error(error);\n      this.setState({error: true, loading: false});\n    }\n  }\n\n  render() {\n    return (\n      this.state.error ?\n        <p className='danger'>Error</p> :\n      this.state.loading ?\n        <p className='loading'>Loading...</p> :\n      <ReactMarkdown\n        source={this.state.text}\n        escapeHtml={false}\n      />\n    );\n  }\n}","export default {\n  //'route': {name: 'Displayed name', args: ['Folder id in google drive', 'filter word']}\n  'nepal2015': {name: 'Nepal 2015', props: {folderId: '0B05WBmFwB2iETlFEYU5VWEVyUmM'}},\n  'india2016': {name: 'India 2016', props: {folderId: '0B05WBmFwB2iEQXM4bElaUDlPT2M'}},\n  'spb2017': {name: 'Spb 2017', props: {folderId: '0B05WBmFwB2iEYXVWWGlTSVUwZzA'}},\n};","export default {\n    GOOGLE_API_KEY: 'AIzaSyCRLzBFmko0AwnvUAWS78FhKxP75CukJFM',\n}","import ganesh from './texts/articles/ganesh.md';\n\nexport default {\n    'ganesh': ganesh,\n}","import React from 'react';\nimport { Route, Switch, Link, withRouter } from 'react-router-dom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\n\nimport GoogleDriveGallery from './GoogleDriveGallery';\nimport Markdown from './Markdown';\n\nimport './App.css';\n\nimport { photos, consts, articles } from './data';\nimport { homeText, aboutText } from './data';\n\n\nconst MarkdownPage = (text) => () => (\n  <Markdown source={text} />\n);\n\nconst Gallery = withRouter(({history, folderId, pattern = null}) => (\n  <GoogleDriveGallery\n    googleApiKey={consts.GOOGLE_API_KEY}\n    folderId={folderId}\n    pattern={pattern}\n    onClose={() => history.push('/photo')}\n  />\n));\n\nconst NavigationLink = withRouter(\n  ({location, match, history, staticContext, ...props}) => (\n    location.pathname.startsWith(props.to) ?\n      <Link className='active' {...props}/>:\n      <Link {...props}/>\n  )\n);\n\nconst Header = () => (\n  <header id='app-header'>\n    <nav id='nav' className='nav'>\n      <div className='tight'>\n      <button\n        href='#'\n        className='icon'\n        onClick={() => {\n          const nav = document.getElementById('nav');\n          nav.className = nav.className === 'nav' ? 'nav responsive' : 'nav';\n        }}\n      >\n        <FontAwesomeIcon icon={faBars}/>\n      </button>\n      <h1>\n        <Link to='/'>xome4ok/travel</Link>\n        <div className='navlinks'>\n          <NavigationLink to='/photo'>photo</NavigationLink>\n          <NavigationLink to='/about'>about</NavigationLink>\n        </div>\n      </h1>\n      </div>\n      <div className='right-header-block'>\n        <a href='https://github.com/xome4ok/travel' className='link-icon'>\n          <FontAwesomeIcon icon={faGithub}/>\n        </a>\n      </div>\n    </nav>\n    <hr/>\n  </header>\n);\n\nconst Text = withRouter(\n  ({location, match, history, staticContext, ...rest}) => (\n    <Markdown source={articles[match.params.text]} />\n));\n\nconst Photo = withRouter(\n  ({location, match, history, staticContext, ...rest}) => (\n    <section>\n      <ul>\n        {Object.entries(photos).map(\n          ([route, {name, props}]) => \n            <li key={route}>\n              <Link to={`/photo/${route}`}>{name}</Link>\n              {match.params.gallery === route ? <Gallery {...props} /> : null}\n            </li>\n        )}\n      </ul>\n    </section>\n));\n\nconst App = () => (\n  <div>\n  <Header />\n  <article id='app'>\n    <Route exact path='/' component={MarkdownPage(homeText)} />\n    <Route exact path='/about' component={MarkdownPage(aboutText)} />\n    <Route path='/texts/:text' component={Text} />\n    <Switch>\n      <Route path='/photo/:gallery' component={Photo} />\n      <Route path='/photo' component={Photo} />\n    </Switch>\n  </article>\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Router basename={process.env.PUBLIC_URL}>\n        <App />\n    </Router>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/home.45935d39.md\";","module.exports = __webpack_public_path__ + \"static/media/about.d41d8cd9.md\";","module.exports = __webpack_public_path__ + \"static/media/ganesh.962421dc.md\";"],"sourceRoot":""}