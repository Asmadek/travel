{"version":3,"sources":["GoogleDriveGallery/index.js","GoogleDriveGallery/GoogleDriveGallery.js","Markdown/index.js","Markdown/Markdown.js","data/photoFolders.js","data/consts.js","App.js","serviceWorker.js","index.js","data/texts/home.md","data/texts/about.md"],"names":["GoogleDriveGallery","state","imagesList","currentImage","error","loading","isOpen","_this2","this","map","_ref","id","name","src","concat","props","googleApiKey","caption","folderId","pattern","pageSize","orderBy","setState","query","QUERY_URL","images","nextPageToken","NEXT_PAGE_URL","fetch","response","json","push","apply","Object","toConsumableArray","_ref2","imageListAsImageGalleryItems","console","_context","t0","getImagesList","_this3","react_default","a","createElement","className","Lightbox_default","onClose","onClickPrev","gotoPrevious","onClickNext","gotoNext","imageCountSeparator","Component","Markdown","text","undefined","file","data","fetchText","source","_context2","react_markdown_default","escapeHtml","photoFolders","nepal2015","args","india2016","spb2017","consts","Home","src_Markdown","homeText","Photo","entries","slicedToArray","route","_ref2$","key","Link","to","NavigationLink","withRouter","_ref3","location","match","history","staticContext","objectWithoutProperties","pathname","assign","Header","href","onClick","nav","document","getElementById","index_es","icon","faBars","faGithub","About","aboutText","App","App_Header","Route","exact","path","component","_ref4","_ref5","_ref5$","arguments","length","src_GoogleDriveGallery","Boolean","window","hostname","ReactDOM","render","BrowserRouter","basename","process","src_App_0","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.f55fac40.chunk.js","sourcesContent":["import GoogleDriveGallery from './GoogleDriveGallery';\n\nexport default GoogleDriveGallery;","import React, { Component } from 'react';\nimport Lightbox from 'react-images';\n\nimport './GoogleDriveGallery.css';\n\n\nexport default class GoogleDriveGallery extends Component {\n  \n  state = {\n    imagesList: [],\n    currentImage: 0,\n    error: false,\n    loading: false,\n    isOpen: true,\n  }\n\n  imageListAsImageGalleryItems(imagesList) {\n    return imagesList.map(\n      ({id, name}) => {\n        return {\n          src: `https://www.googleapis.com/drive/v3/files/${id}?alt=media&key=${this.props.googleApiKey}`,\n          caption: name,\n        };\n      }\n    )\n  }\n\n  async getImagesList(folderId, googleApiKey, pattern=null, pageSize=1000, orderBy='name') {\n    try {\n      this.setState({loading: true});\n      const query = `'${folderId}'+in+parents+and+mimeType+contains+'image/'` + (pattern ? `+and+name+contains+'${pattern}'` : '')\n      const QUERY_URL = `https://www.googleapis.com/drive/v3/files?q=${query}&orderBy=${orderBy}&pageSize=${pageSize}&key=${googleApiKey}`;\n      const images = [];\n      let nextPageToken = true;\n      while (nextPageToken) {\n        const NEXT_PAGE_URL = QUERY_URL + (nextPageToken === true || !nextPageToken ? '' : `&pageToken=${nextPageToken}`);\n        const response = await fetch(NEXT_PAGE_URL);\n        const json = await response.json();\n        images.push(...json['files'].map(({id, name}) => {return {id, name};}));\n        nextPageToken = json['nextPageToken'];\n      }\n      this.setState(\n        {\n          imagesList: this.imageListAsImageGalleryItems(images),\n          loading: false\n        }\n      );\n    } catch (error) {\n      console.error(error);\n      this.setState({error: true, loading: false});\n    }\n  }\n\n  async componentDidMount() {\n    const { folderId, googleApiKey, pattern } = this.props;\n    await this.getImagesList(folderId, googleApiKey, pattern);\n  }\n\n  gotoPrevious () {\n    this.setState({\n      currentImage: this.state.currentImage - 1,\n    });\n  }\n\n  gotoNext () {\n    this.setState({\n      currentImage: this.state.currentImage + 1,\n    });\n  }\n\n  render() {\n    return (\n      this.state.loading ?\n         \n        <div className='loading'>Loading...</div> :\n         \n      this.state.error ?\n\n        <div className='error'>Error loading gallery!</div> :\n      \n      <Lightbox\n        images={this.state.imagesList}\n        isOpen={this.state.isOpen}\n        onClose={() => this.setState({isOpen: false})}\n        onClickPrev={() => this.gotoPrevious()}\n        onClickNext={() => this.gotoNext()}\n        imageCountSeparator='/'\n        currentImage={this.state.currentImage}\n      />\n    );\n  }\n}","import Markdown from './Markdown';\nexport default Markdown;\n","import React, { Component } from 'react';\nimport ReactMarkdown from 'react-markdown';\n\nexport default class Markdown extends Component {\n  state = {\n    text: undefined,\n    loading: false,\n    error: false,\n  }\n  \n  async fetchText(file) {\n    const data = await fetch(file);\n    return await data.text();\n  }\n\n  async componentDidMount() {\n    this.setState({loading: true});\n    try {\n      const text = await this.fetchText(this.props.source);\n      this.setState({text: text, loading: false});\n    } catch (error) {\n      console.error(error);\n      this.setState({error: true, loading: false});\n    }\n  }\n\n  render() {\n    return (\n      this.state.error ?\n        <p className='danger'>Error</p> :\n      this.state.loading ?\n        <p className='loading'>Loading...</p> :\n      <ReactMarkdown\n        source={this.state.text}\n        escapeHtml={false}\n      />\n    );\n  }\n}","export default {\n  //'route': {name: 'Displayed name', args: ['Folder id in google drive', 'filter word']}\n  'nepal2015': {name: 'Nepal 2015', args: ['0B05WBmFwB2iETlFEYU5VWEVyUmM']},\n  'india2016': {name: 'India 2016', args: ['0B05WBmFwB2iEQXM4bElaUDlPT2M']},\n  'spb2017': {name: 'Spb 2017', args: ['0B05WBmFwB2iEYXVWWGlTSVUwZzA']},\n};","export default {\n    GOOGLE_API_KEY: 'AIzaSyCRLzBFmko0AwnvUAWS78FhKxP75CukJFM',\n}","import React from 'react';\nimport { Route, Link, withRouter } from 'react-router-dom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\n\nimport GoogleDriveGallery from './GoogleDriveGallery';\nimport Markdown from './Markdown';\n\nimport './App.css';\n\nimport { photoFolders, consts } from './data';\nimport { homeText, aboutText } from './data';\n\n\nconst Gallery = (folderId, pattern = null) => () => (\n  <GoogleDriveGallery\n    googleApiKey={consts.GOOGLE_API_KEY}\n    folderId={folderId}\n    pattern={pattern}\n  />\n);\n\nconst Home = () => (\n  <section>\n    <Markdown source={homeText}/>\n  </section>\n);\n\nconst Photo = () => (\n  <section>\n    <ul>\n      {Object.entries(photoFolders).map(\n        ([route, {name, args}]) => <li key={route}><Link to={`/photo/${route}`}>{name}</Link></li>\n      )}\n    </ul>\n  </section>\n);\n\nconst NavigationLink = withRouter(\n  ({location, match, history, staticContext, ...props}) => (\n    location.pathname === props.to ?\n      <Link className='active' {...props}/>:\n      <Link {...props}/>\n  )\n);\n\nconst Header = () => (\n  <header id='app-header'>\n    <nav id='nav' className='nav'>\n      <div className='tight'>\n      <button\n        href='#'\n        className='icon'\n        onClick={() => {\n          const nav = document.getElementById('nav');\n          nav.className = nav.className === 'nav' ? 'nav responsive' : 'nav';\n        }}\n      >\n        <FontAwesomeIcon icon={faBars}/>\n      </button>\n      <h1>\n        <Link to='/'>xome4ok/travel</Link>\n        <div className='navlinks'>\n          <NavigationLink to='/photo'>photo</NavigationLink>\n          <NavigationLink to='/text'>text</NavigationLink>\n          <NavigationLink to='/about'>about</NavigationLink>\n        </div>\n      </h1>\n      </div>\n      <div className='right-header-block'>\n        <a href='https://github.com/xome4ok/travel' className='link-icon'><FontAwesomeIcon icon={faGithub}/></a>\n      </div>\n    </nav>\n    <hr/>\n  </header>\n);\n\nconst About = () => (\n  <section>\n    <Markdown source={aboutText}/>\n  </section>  \n);\n\nconst App = () => (\n  <div>\n  <Header />\n  <article id='app'>\n    <Route exact path='/' component={Home} />\n    <Route path='/photo' component={Photo} />\n    <Route path='/about' component={About} />\n    {\n      Object.entries(photoFolders).map(\n        ([route, {name, args}]) => \n          <Route\n            exact\n            path={`/photo/${route}`}\n            component={Gallery(...args)}\n            key={route}\n          />\n      )\n    }\n  </article>\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Router basename={process.env.PUBLIC_URL}>\n        <App />\n    </Router>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/home.783503ad.md\";","module.exports = __webpack_public_path__ + \"static/media/about.69efd72e.md\";"],"sourceRoot":""}